/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as BrowserUse from "../index.js";

/**
 * View model for representing a (browser) session with its associated tasks.
 *
 * Attributes:
 *     id: Unique identifier for the session.
 *     status: Current status of the session (active/stopped).
 *     live_url: URL where the browser can be viewed live in real-time.
 *     started_at: Timestamp when the session was created and started.
 *     finished_at: Timestamp when the session was stopped (None if still active).
 *     tasks: Optional list of tasks associated with this session.
 *         record_url: URL to access the recorded session playback.
 *     public_share_url: Optional URL to access the public share of the session.
 */
export interface SessionView {
    id: string;
    status: BrowserUse.SessionStatus;
    liveUrl?: string;
    startedAt: string;
    finishedAt?: string;
    tasks?: BrowserUse.TaskItemView[];
    recordUrl?: string;
    publicShareUrl?: string;
}
